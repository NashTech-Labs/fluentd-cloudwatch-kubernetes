apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Values.name }}
  labels:
    fluentd-cloudwatch.service: {{ .Values.name }}
spec:
  selector:
    matchLabels:
      fluentd-cloudwatch.service: {{ .Values.name }}
  template:
    metadata:
      labels:
        fluentd-cloudwatch.service: {{ .Values.name }} 
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{ if .Values.awsRole }}iam.amazonaws.com/role: {{ .Values.awsRole }}{{ end }}
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
      securityContext:
{{ toYaml .Values.podSecurityContext | indent 8 }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      initContainers:
        - name: copy-fluentd-config
          image: busybox
          command: ['sh', '-c', 'cp /config-volume/* /etc/fluentd']
          volumeMounts:
            - name: config-volume
              mountPath: /config-volume
            - name: config
              mountPath: /etc/fluentd
      containers:
      - name: {{ .Values.name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        #hostNetwork: {{ default false .Values.hostNetwork }}
        env:
        - name: AWS_REGION
          value: {{ .Values.awsRegion }}
        - name: LOG_GROUP_NAME
          value: {{ .Values.logGroupName }}
        - name: CLUSTER_NAME
          value: {{ .Values.CLUSTER_NAME }}
{{- if not .Values.awsRole }}
{{- if .Values.awsAccessKeyId }}
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              key: AWS_ACCESS_KEY_ID
              name: {{ template "fluentd-cloudwatch.fullname" . }}
{{- end }}
{{- if .Values.awsSecretAccessKey }}
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: AWS_SECRET_ACCESS_KEY
              name: {{ template "fluentd-cloudwatch.fullname" . }}
{{- end }}
{{- end }}
{{- range $env := .Values.extraVars }}
        - {{ $env  }}
{{- end }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
        volumeMounts:
        - name: varlog
          mountPath: /var/log
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
          readOnly: true
        - name: config
          mountPath: /fluentd/etc
        - name: config-volume
          mountPath: /config-volume
      terminationGracePeriodSeconds: 30
      volumes:
      - name: varlog
        hostPath:
          path: /var/log
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      - name: config
        emptyDir: {}
      - name: config-volume
        configMap:
          name: {{ .Values.name }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 6 }}
{{- end }}
      {{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      {{- end }}
    {{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
    {{- end }}
  updateStrategy:
{{ toYaml .Values.updateStrategy | indent 4 }}
